#!/usr/bin/env python3
"""
Teste de Gera√ß√£o de Documento Word com Bordas
"""
import os
import sys
from datetime import datetime

# Adicionar path para importa√ß√£o
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def test_word_document_with_borders():
    """Testa gera√ß√£o de documento Word com bordas baseado no modelo da concorr√™ncia"""
    print("=== TESTE DE DOCUMENTO WORD COM BORDAS ===")
    print(f"üéØ Objetivo: Gerar documento .docx com bordas como modelo da concorr√™ncia")
    print(f"üïê Iniciando √†s {datetime.now().strftime('%H:%M:%S')}")
    
    try:
        from utils.word_formatter_with_borders import WordFormatterWithBorders
        print("‚úÖ WordFormatterWithBorders importado com sucesso")
        
        # Criar formatador
        formatter = WordFormatterWithBorders()
        print("‚úÖ Formatador inicializado")
        
        # Conte√∫do de teste baseado no ETP real
        test_content = """
1. INTRODU√á√ÉO

O presente Estudo T√©cnico Preliminar (ETP) foi elaborado em conformidade com o art. 18, inciso I, da Lei n¬∫ 14.133/2021, que estabelece a obrigatoriedade de elabora√ß√£o de estudos t√©cnicos preliminares para contrata√ß√µes p√∫blicas.

Este documento tem por finalidade demonstrar a viabilidade t√©cnica e econ√¥mica da contrata√ß√£o pretendida, bem como subsidiar a defini√ß√£o do objeto, dos requisitos t√©cnicos e das demais especifica√ß√µes necess√°rias.

A elabora√ß√£o deste estudo observa os princ√≠pios da legalidade, impessoalidade, moralidade, publicidade e efici√™ncia, conforme estabelecido no art. 37 da Constitui√ß√£o Federal.

O planejamento da contrata√ß√£o visa garantir o melhor resultado para a Administra√ß√£o P√∫blica, considerando os aspectos de qualidade, sustentabilidade e economicidade.

A metodologia empregada baseia-se em an√°lise t√©cnica detalhada, pesquisa de mercado e avalia√ß√£o de riscos, assegurando a adequa√ß√£o da solu√ß√£o √†s necessidades identificadas.

Este documento ser√° submetido √† aprova√ß√£o da autoridade competente antes do prosseguimento do processo de contrata√ß√£o.

A transpar√™ncia e a conformidade legal s√£o premissas fundamentais que norteiam todo o processo de elabora√ß√£o deste estudo.

O resultado esperado √© a identifica√ß√£o da melhor solu√ß√£o t√©cnica e economicamente vi√°vel para atender √†s necessidades da Administra√ß√£o.

2. OBJETO DO ESTUDO E ESPECIFICA√á√ïES GERAIS

2.1. Objeto: Contrata√ß√£o de sistema integrado de gest√£o de contratos p√∫blicos com intelig√™ncia artificial para moderniza√ß√£o dos processos administrativos.

2.2. Planejamento / Demanda espec√≠fica: A demanda decorre da necessidade de moderniza√ß√£o dos processos de gest√£o contratual da Administra√ß√£o P√∫blica.

2.3. Modalidade de licita√ß√£o a ser adotada: Concorr√™ncia, conforme art. 28, inciso I, da Lei n¬∫ 14.133/2021.

2.4. Tipo de Licita√ß√£o: T√©cnica e Pre√ßo, considerando a complexidade t√©cnica da solu√ß√£o.

2.5. Crit√©rio de Julgamento: Melhor t√©cnica e pre√ßo, conforme art. 34 da Lei n¬∫ 14.133/2021.

2.6. Registro de pre√ßos: N√£o se aplica para esta contrata√ß√£o espec√≠fica.

3. DESCRI√á√ÉO DOS REQUISITOS DA CONTRATA√á√ÉO

Os requisitos t√©cnicos foram definidos com base na an√°lise das necessidades operacionais e nas melhores pr√°ticas de gest√£o contratual.

A solu√ß√£o dever√° contemplar funcionalidades de gest√£o completa do ciclo de vida dos contratos, desde o planejamento at√© a execu√ß√£o e fiscaliza√ß√£o.

√â obrigat√≥ria a conformidade com a Lei Geral de Prote√ß√£o de Dados (LGPD) e demais normas de seguran√ßa da informa√ß√£o.

A arquitetura da solu√ß√£o deve ser baseada em nuvem, garantindo escalabilidade e disponibilidade dos servi√ßos.

A integra√ß√£o com sistemas legados da Administra√ß√£o √© requisito fundamental para a continuidade operacional.

O sistema deve possuir interface intuitiva e recursos de business intelligence para apoio √† tomada de decis√£o.

A solu√ß√£o deve contemplar m√≥dulos de workflow, gest√£o documental e controle de prazos contratuais.

√â necess√°ria a disponibiliza√ß√£o de APIs para integra√ß√£o com outros sistemas governamentais.

4. ESTIMATIVA DAS QUANTIDADES E VALORES

A estimativa de valores foi elaborada com base em pesquisa de mercado realizada junto a fornecedores qualificados.

Foram consultados pre√ßos praticados em contratos similares de outros √≥rg√£os p√∫blicos para valida√ß√£o dos valores.

A metodologia considera custos de licenciamento, implementa√ß√£o, customiza√ß√£o e treinamento dos usu√°rios.

Os valores foram ajustados considerando a complexidade espec√≠fica dos requisitos da Administra√ß√£o.

| Item | Quantidade | Unidade | Valor Unit√°rio | Valor Total |
|------|------------|---------|----------------|-------------|
| Licen√ßas do Sistema | 100 | Usu√°rio/ano | R$ 2.500,00 | R$ 250.000,00 |
| Implementa√ß√£o e Customiza√ß√£o | 1 | Projeto | R$ 100.000,00 | R$ 100.000,00 |
| Treinamento de Usu√°rios | 1 | Projeto | R$ 50.000,00 | R$ 50.000,00 |
| **TOTAL ESTIMADO** | | | | **R$ 400.000,00** |

A estimativa considera margem de seguran√ßa de 10% para eventuais ajustes durante a implementa√ß√£o.

Os valores incluem todos os tributos e encargos aplic√°veis conforme legisla√ß√£o vigente.

A validade da estimativa √© de 6 meses, podendo ser revista conforme varia√ß√µes de mercado.

5. LEVANTAMENTO DE MERCADO E JUSTIFICATIVA DA ESCOLHA DA SOLU√á√ÉO

O levantamento de mercado identificou diversas solu√ß√µes dispon√≠veis com diferentes n√≠veis de adequa√ß√£o aos requisitos.

Foram analisadas solu√ß√µes nacionais e internacionais, priorizando fornecedores com experi√™ncia no setor p√∫blico.

A escolha da solu√ß√£o baseou-se em crit√©rios de funcionalidade, seguran√ßa, escalabilidade e custo-benef√≠cio.

Foram considerados aspectos de suporte t√©cnico, capacita√ß√£o e transfer√™ncia de conhecimento.

A solu√ß√£o selecionada apresenta o melhor equil√≠brio entre atendimento aos requisitos e viabilidade econ√¥mica.

O fornecedor possui certifica√ß√µes de qualidade e seguran√ßa reconhecidas internacionalmente.

A arquitetura proposta garante flexibilidade para futuras expans√µes e integra√ß√µes.

A an√°lise de TCO (Total Cost of Ownership) demonstrou a vantajosidade da solu√ß√£o escolhida.

13. AN√ÅLISE DE RISCOS

A an√°lise de riscos contempla aspectos t√©cnicos, operacionais, financeiros e de cronograma do projeto.

Foram identificados riscos relacionados √† integra√ß√£o com sistemas legados e √† migra√ß√£o de dados.

| Risco | Probabilidade | Impacto | Estrat√©gia de Mitiga√ß√£o |
|-------|---------------|---------|------------------------|
| Problemas de integra√ß√£o | M√©dia | Alto | Testes extensivos e ambiente de homologa√ß√£o |
| Atraso na implementa√ß√£o | Baixa | M√©dio | Cronograma com folgas e marcos de controle |
| Resist√™ncia dos usu√°rios | M√©dia | M√©dio | Programa de capacita√ß√£o e gest√£o da mudan√ßa |
| Problemas de performance | Baixa | Alto | Testes de carga e dimensionamento adequado |

O monitoramento cont√≠nuo dos riscos ser√° realizado durante toda a execu√ß√£o do projeto.

Planos de conting√™ncia foram elaborados para os riscos de maior criticidade.

A governan√ßa do projeto incluir√° comit√™ espec√≠fico para gest√£o de riscos e tomada de decis√µes.

14. CONCLUS√ÉO E POSICIONAMENTO FINAL

Com base nos estudos realizados, conclui-se pela viabilidade t√©cnica e econ√¥mica da contrata√ß√£o.

A solu√ß√£o proposta atende integralmente aos requisitos identificados e √†s necessidades da Administra√ß√£o.

Os riscos foram adequadamente mapeados e possuem estrat√©gias de mitiga√ß√£o definidas.

O investimento se justifica pelos benef√≠cios esperados em termos de efici√™ncia e moderniza√ß√£o.

Recomenda-se o prosseguimento do processo licitat√≥rio conforme modalidade e crit√©rios definidos.

A implementa√ß√£o da solu√ß√£o contribuir√° significativamente para a melhoria da gest√£o contratual.

O cronograma proposto √© fact√≠vel e compat√≠vel com as necessidades operacionais.

Este ETP demonstra o cumprimento das exig√™ncias legais e a adequa√ß√£o da contrata√ß√£o aos princ√≠pios da Administra√ß√£o P√∫blica.
"""
        
        # Dados da sess√£o de teste
        session_data = {
            'answers': {
                '1': 'Sistema integrado de gest√£o de contratos p√∫blicos com IA',
                '2': 'Sim, previsto no PCA 2024',
                '3': 'Lei 14.133/21, LGPD, Decreto 10.024/19',
                '4': 'R$ 400.000,00 total estimado',
                '5': 'N√£o haver√° parcelamento'
            },
            'session_id': 'test_borders_2024',
            'title': 'Estudo T√©cnico Preliminar - Teste com Bordas'
        }
        
        print("üìù Gerando documento Word com bordas...")
        
        # Gerar documento
        doc_path = formatter.create_etp_with_borders(test_content, session_data)
        
        print(f"‚úÖ Documento gerado com sucesso!")
        print(f"üìÅ Caminho: {doc_path}")
        
        # Verificar se arquivo foi criado
        if os.path.exists(doc_path):
            file_size = os.path.getsize(doc_path)
            print(f"üìä Tamanho do arquivo: {file_size:,} bytes")
            print(f"üìÑ Formato: .docx")
            
            # Verificar se √© um arquivo Word v√°lido
            if doc_path.endswith('.docx') and file_size > 10000:  # Pelo menos 10KB
                print("‚úÖ Arquivo Word v√°lido gerado")
                
                # Tentar abrir com python-docx para validar
                try:
                    from docx import Document
                    doc = Document(doc_path)
                    paragraph_count = len(doc.paragraphs)
                    print(f"üìä Par√°grafos no documento: {paragraph_count}")
                    
                    # Verificar se tem conte√∫do
                    if paragraph_count > 10:
                        print("‚úÖ Documento cont√©m conte√∫do adequado")
                    else:
                        print("‚ö†Ô∏è  Documento pode estar com pouco conte√∫do")
                        
                except Exception as e:
                    print(f"‚ö†Ô∏è  Erro ao validar documento: {e}")
            else:
                print("‚ùå Arquivo gerado pode estar corrompido")
        else:
            print("‚ùå Arquivo n√£o foi criado")
            return False
        
        # Testar elementos espec√≠ficos do modelo
        print("\nüé® Verificando elementos do modelo da concorr√™ncia:")
        
        # Verificar se m√©todos espec√≠ficos existem
        methods_to_check = [
            '_apply_document_borders',
            '_add_blue_background', 
            '_add_institutional_header',
            '_add_main_title_with_background',
            '_create_formatted_table'
        ]
        
        for method in methods_to_check:
            if hasattr(formatter, method):
                print(f"  ‚úÖ {method}")
            else:
                print(f"  ‚ùå {method}")
        
        print(f"\nüéâ TESTE CONCLU√çDO COM SUCESSO!")
        print(f"üìÅ Documento dispon√≠vel em: {doc_path}")
        print(f"üéØ Resultado: Documento Word com bordas baseado no modelo da concorr√™ncia")
        
        return doc_path
        
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro geral: {e}")
        return False

def test_border_elements():
    """Testa elementos espec√≠ficos de bordas"""
    print("\n=== TESTE DE ELEMENTOS DE BORDAS ===")
    
    try:
        from utils.word_formatter_with_borders import WordFormatterWithBorders
        
        formatter = WordFormatterWithBorders()
        
        # Verificar cores definidas
        print(f"üé® Cor azul: RGB{formatter.blue_color}")
        print(f"üé® Cor branca: RGB{formatter.white_color}")
        print(f"üé® Cor preta: RGB{formatter.black_color}")
        
        # Verificar se m√©todos de formata√ß√£o existem
        formatting_methods = [
            '_configure_page_with_borders',
            '_add_cell_border',
            '_add_paragraph_border',
            '_remove_table_borders'
        ]
        
        print("\nüîß M√©todos de formata√ß√£o:")
        for method in formatting_methods:
            if hasattr(formatter, method):
                print(f"  ‚úÖ {method}")
            else:
                print(f"  ‚ùå {method}")
        
        print("‚úÖ Elementos de bordas validados")
        
    except Exception as e:
        print(f"‚ùå Erro na valida√ß√£o: {e}")

if __name__ == "__main__":
    print("üöÄ Iniciando teste de documento Word com bordas...")
    
    # Teste principal
    result = test_word_document_with_borders()
    
    # Teste de elementos
    test_border_elements()
    
    if result:
        print(f"\n‚úÖ SUCESSO: Documento Word com bordas gerado!")
        print(f"üìÅ Arquivo: {result}")
        print(f"üéØ O documento final agora possui bordas como o modelo da concorr√™ncia!")
    else:
        print(f"\n‚ùå FALHA: N√£o foi poss√≠vel gerar o documento")
    
    print(f"\nüïê Teste finalizado √†s {datetime.now().strftime('%H:%M:%S')}")

